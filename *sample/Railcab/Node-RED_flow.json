[
{
"id": "flow_name",
"type": "tab",
"label": "Converted Controller",
"disabled": false
},
{
"id": "get_request",
"type": "http in",
"z": "flow_name",
"disabled": false,
"name": "get_request",
"url": "/Node-RED",
"method": "get",
"upload": false,
"x": 200,
"y": 100,
"wires": [["extract_request"]]
},
{
"id": "extract_request",
"type": "function",
"z": "flow_name",
"name": "extract_request",
"func": "var req = msg.payload;\n msg.payload = req['req'];\nreturn msg;",
"noerr": 0,
"x": 200,
"y": 150,
"wires": [["set_flow_action"]]
},
{
"id": "set_flow_action",
"type": "change",
"z": "flow_name",
"name": "set_flow_action",
"rules": [{"t": "set","p": "action","pt": "flow","to": "payload","tot": "msg"}],
"reg": false,
"x": 200,
"y": 200,
"wires": [["response_request"]]
},
{
"id": "response_request",
"type": "http response",
"z": "flow_name",
"name": "response_request",
"x": 200,
"y": 250,
"wires": []
},
{
"id": "init",
"type": "inject",
"z": "flow_name",
"name": "init",
"payload": "",
"payloadType": "date",
"repeat": "",
"crontab": "",
"once": false,
"onceDelay": 0.1,
"x": 500,
"y": 100,
"wires": [["set_init_state"]]
},
{
"id": "set_init_state",
"type": "change",
"z": "flow_name",
"name": "set_init_state",
"rules": [{"t": "set","p": "action","pt": "flow","to": "null","tot": "str"}],
"reg": false,
"x": 500,
"y": 150,
"wires": [["Q0"]]
},
{
"id": "Q0",
"type": "function",
"z": "flow_name",
"name": "Q0",
"func": "flow.set(\"State\", \"Q0\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 500,
"y": 200,
"wires": [["Q0_check"]]
},
{
"id": "Q0_check",
"type": "switch",
"z": "flow_name",
"name": "Q0_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "endOfTS","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 500,
"y": 250,
"wires": [["Q4"],["Q0"]]
},
{
"id": "Q1",
"type": "function",
"z": "flow_name",
"name": "Q1",
"func": "flow.set(\"State\", \"Q1\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 500,
"y": 300,
"wires": [["Q1_check"]]
},
{
"id": "Q1_check",
"type": "switch",
"z": "flow_name",
"name": "Q1_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "lastEmergencyBrake","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 500,
"y": 350,
"wires": [["Q8"],["Q1"]]
},
{
"id": "Q2",
"type": "function",
"z": "flow_name",
"name": "Q2",
"func": "flow.set(\"State\", \"Q2\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 500,
"y": 400,
"wires": [["Q2:idle_c_set"]]
},
{
"id": "Q2:idle_c_set",
"type": "function",
"z": "flow_name",
"name": "idle_c_set",
"func": "msg.payload = \"idle_c\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 800,
"y": 400,
"wires": [["Q2:idle_c"]]
},
{
"id": "Q2:idle_c",
"type": "http request",
"z": "flow_name",
"name": "idle_c",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/idle_c/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1100,
"y": 400,
"wires": [["Q6"]]
},
{
"id": "Q3",
"type": "function",
"z": "flow_name",
"name": "Q3",
"func": "flow.set(\"State\", \"Q3\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 500,
"y": 450,
"wires": [["Q3_check"]]
},
{
"id": "Q3_check",
"type": "switch",
"z": "flow_name",
"name": "Q3_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "lastEmergencyBrake","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 500,
"y": 500,
"wires": [["Q10"],["Q3"]]
},
]
