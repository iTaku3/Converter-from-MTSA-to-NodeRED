[
{
"id": "flow_name",
"type": "tab",
"label": "Converted Controller",
"disabled": false
},
{
"id": "get_request",
"type": "http in",
"z": "flow_name",
"disabled": false,
"name": "get_request",
"url": "/Node-RED",
"method": "get",
"upload": false,
"x": 200,
"y": 100,
"wires": [["extract_request"]]
},
{
"id": "extract_request",
"type": "function",
"z": "flow_name",
"name": "extract_request",
"func": "var req = msg.payload;\n msg.payload = req['req'];\nreturn msg;",
"noerr": 0,
"x": 200,
"y": 150,
"wires": [["set_flow_action"]]
},
{
"id": "set_flow_action",
"type": "change",
"z": "flow_name",
"name": "set_flow_action",
"rules": [{"t": "set","p": "action","pt": "flow","to": "payload","tot": "msg"}],
"reg": false,
"x": 200,
"y": 200,
"wires": [["response_request"]]
},
{
"id": "response_request",
"type": "http response",
"z": "flow_name",
"name": "response_request",
"x": 200,
"y": 250,
"wires": []
},
{
"id": "init",
"type": "inject",
"z": "flow_name",
"name": "init",
"payload": "",
"payloadType": "date",
"repeat": "",
"crontab": "",
"once": false,
"onceDelay": 0.1,
"x": 700,
"y": 100,
"wires": [["set_init_state"]]
},
{
"id": "set_init_state",
"type": "change",
"z": "flow_name",
"name": "set_init_state",
"rules": [{"t": "set","p": "action","pt": "flow","to": "null","tot": "str"}],
"reg": false,
"x": 700,
"y": 150,
"wires": [["Q0"]]
},
{
"id": "Q0",
"type": "function",
"z": "flow_name",
"name": "Q0",
"func": "flow.set(\"State\", \"Q0\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 200,
"wires": [["Q0_check"]]
},
{
"id": "Q0_check",
"type": "switch",
"z": "flow_name",
"name": "Q0_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 275,
"wires": [["Q1"],["Q0_delay"]]
},
{
"id": "Q0_delay",
"type": "delay",
"z": "flow_name",
"name": "delay 100ms",
"pauseType": "delay",
"timeout": "100",
"timeoutUnits": "milliseconds",
"rate": "1",
"nbRateUnits": "1",
"rateUnits": "second",
"randomFirst": "1",
"randomLast": "5",
"randomUnits": "seconds",
"drop": false,
"x": 500,
"y": 200,
"wires": [["Q0"]]
},
{
"id": "Q1",
"type": "function",
"z": "flow_name",
"name": "Q1",
"func": "flow.set(\"State\", \"Q1\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 350,
"wires": [["Q1_set"]]
},
{
"id": "Q1_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\", \"allow_A[1]\");\n var rnd = Math.floor( Math.random() * 2);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 350,
"wires": [["Q1_check"]]
},
{
"id": "Q1_check",
"type": "switch",
"z": "flow_name",
"name": "Q1_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "allow_A[1]","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 350,
"wires": [["Q1_deny_A_set"], ["Q1_allow_A[1]_set"]]
},{
"id": "Q1_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 350,
"wires": [["Q1_deny_A"]]
},
{
"id": "Q1_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 350,
"wires": [["Q0"]]
},{
"id": "Q1_allow_A[1]_set",
"type": "function",
"z": "flow_name",
"name": "allow_A[1]_set",
"func": "msg.payload = \"allow_A[1]\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 390,
"wires": [["Q1_allow_A[1]"]]
},
{
"id": "Q1_allow_A[1]",
"type": "http request",
"z": "flow_name",
"name": "allow_A[1]",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_A[1]/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 390,
"wires": [["Q2"]]
},
{
"id": "Q2",
"type": "function",
"z": "flow_name",
"name": "Q2",
"func": "flow.set(\"State\", \"Q2\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 440,
"wires": [["Q2_check"]]
},
{
"id": "Q2_check",
"type": "switch",
"z": "flow_name",
"name": "Q2_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_B","vt": "str"},{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 515,
"wires": [["Q3"],["Q17"],["Q2_delay"]]
},
{
"id": "Q2_delay",
"type": "delay",
"z": "flow_name",
"name": "delay 100ms",
"pauseType": "delay",
"timeout": "100",
"timeoutUnits": "milliseconds",
"rate": "1",
"nbRateUnits": "1",
"rateUnits": "second",
"randomFirst": "1",
"randomLast": "5",
"randomUnits": "seconds",
"drop": false,
"x": 500,
"y": 440,
"wires": [["Q2"]]
},
{
"id": "Q3",
"type": "function",
"z": "flow_name",
"name": "Q3",
"func": "flow.set(\"State\", \"Q3\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 590,
"wires": [["Q3_check_request"]]
},
{
"id": "Q3_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q3: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 665,
"wires": [["Q16"],["Q3_wait"]]
},
{
"id": "Q3_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 740,
"wires": [["Q3_check_time"]]
},
{
"id": "Q3_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 740,
"wires": [["Q3_set"],["Q3"]]
},
{
"id": "Q3_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_B\", \"allow_B[1]\");\n var rnd = Math.floor( Math.random() * 2);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 740,
"wires": [["Q3_check_operation"]]
},
{
"id": "Q3_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q3: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_B","vt": "str"}, {"t": "eq","v": "allow_B[1]","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 740,
"wires": [["Q3_deny_B_set"], ["Q3_allow_B[1]_set"]]
},
{
"id": "Q3_deny_B_set",
"type": "function",
"z": "flow_name",
"name": "deny_B_set",
"func": "msg.payload = \"deny_B\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 740,
"wires": [["Q3_deny_B"]]
},
{
"id": "Q3_deny_B",
"type": "http request",
"z": "flow_name",
"name": "deny_B",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_B/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 740,
"wires": [["Q2"]]
},
{
"id": "Q3_allow_B[1]_set",
"type": "function",
"z": "flow_name",
"name": "allow_B[1]_set",
"func": "msg.payload = \"allow_B[1]\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 780,
"wires": [["Q3_allow_B[1]"]]
},
{
"id": "Q3_allow_B[1]",
"type": "http request",
"z": "flow_name",
"name": "allow_B[1]",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_B[1]/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 780,
"wires": [["Q4"]]
},
{
"id": "Q4",
"type": "function",
"z": "flow_name",
"name": "Q4",
"func": "flow.set(\"State\", \"Q4\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 830,
"wires": [["Q4_check"]]
},
{
"id": "Q4_check",
"type": "switch",
"z": "flow_name",
"name": "Q4_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqOut","vt": "str"},{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 905,
"wires": [["Q5"],["Q15"],["Q4_delay"]]
},
{
"id": "Q4_delay",
"type": "delay",
"z": "flow_name",
"name": "delay 100ms",
"pauseType": "delay",
"timeout": "100",
"timeoutUnits": "milliseconds",
"rate": "1",
"nbRateUnits": "1",
"rateUnits": "second",
"randomFirst": "1",
"randomLast": "5",
"randomUnits": "seconds",
"drop": false,
"x": 500,
"y": 830,
"wires": [["Q4"]]
},
{
"id": "Q5",
"type": "function",
"z": "flow_name",
"name": "Q5",
"func": "flow.set(\"State\", \"Q5\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 980,
"wires": [["Q5_check_request"]]
},
{
"id": "Q5_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q5: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1055,
"wires": [["Q6"],["Q5_wait"]]
},
{
"id": "Q5_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 1130,
"wires": [["Q5_check_time"]]
},
{
"id": "Q5_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1130,
"wires": [["Q5_set"],["Q5"]]
},
{
"id": "Q5_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"allow_Out\", \"deny_Out\");\n var rnd = Math.floor( Math.random() * 2);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 1130,
"wires": [["Q5_check_operation"]]
},
{
"id": "Q5_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q5: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "allow_Out","vt": "str"}, {"t": "eq","v": "deny_Out","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 1130,
"wires": [["Q5_allow_Out_set"], ["Q5_deny_Out_set"]]
},
{
"id": "Q5_allow_Out_set",
"type": "function",
"z": "flow_name",
"name": "allow_Out_set",
"func": "msg.payload = \"allow_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1130,
"wires": [["Q5_allow_Out"]]
},
{
"id": "Q5_allow_Out",
"type": "http request",
"z": "flow_name",
"name": "allow_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1130,
"wires": [["Q0"]]
},
{
"id": "Q5_deny_Out_set",
"type": "function",
"z": "flow_name",
"name": "deny_Out_set",
"func": "msg.payload = \"deny_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1170,
"wires": [["Q5_deny_Out"]]
},
{
"id": "Q5_deny_Out",
"type": "http request",
"z": "flow_name",
"name": "deny_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1170,
"wires": [["Q4"]]
},
{
"id": "Q6",
"type": "function",
"z": "flow_name",
"name": "Q6",
"func": "flow.set(\"State\", \"Q6\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 1220,
"wires": [["Q6_set"]]
},
{
"id": "Q6_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"allow_Out\", \"deny_A\", \"allow_A[1]\", \"deny_Out\");\n var rnd = Math.floor( Math.random() * 4);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 1220,
"wires": [["Q6_check"]]
},
{
"id": "Q6_check",
"type": "switch",
"z": "flow_name",
"name": "Q6_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "allow_Out","vt": "str"}, {"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "allow_A[1]","vt": "str"}, {"t": "eq","v": "deny_Out","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 1220,
"wires": [["Q6_allow_Out_set"], ["Q6_deny_A_set"], ["Q6_allow_A[1]_set"], ["Q6_deny_Out_set"]]
},{
"id": "Q6_allow_Out_set",
"type": "function",
"z": "flow_name",
"name": "allow_Out_set",
"func": "msg.payload = \"allow_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1220,
"wires": [["Q6_allow_Out"]]
},
{
"id": "Q6_allow_Out",
"type": "http request",
"z": "flow_name",
"name": "allow_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1220,
"wires": [["Q1"]]
},{
"id": "Q6_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1260,
"wires": [["Q6_deny_A"]]
},
{
"id": "Q6_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1260,
"wires": [["Q5"]]
},{
"id": "Q6_allow_A[1]_set",
"type": "function",
"z": "flow_name",
"name": "allow_A[1]_set",
"func": "msg.payload = \"allow_A[1]\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1300,
"wires": [["Q6_allow_A[1]"]]
},
{
"id": "Q6_allow_A[1]",
"type": "http request",
"z": "flow_name",
"name": "allow_A[1]",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_A[1]/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1300,
"wires": [["Q7"]]
},{
"id": "Q6_deny_Out_set",
"type": "function",
"z": "flow_name",
"name": "deny_Out_set",
"func": "msg.payload = \"deny_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1340,
"wires": [["Q6_deny_Out"]]
},
{
"id": "Q6_deny_Out",
"type": "http request",
"z": "flow_name",
"name": "deny_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1340,
"wires": [["Q15"]]
},
{
"id": "Q7",
"type": "function",
"z": "flow_name",
"name": "Q7",
"func": "flow.set(\"State\", \"Q7\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 1390,
"wires": [["Q7_check_request"]]
},
{
"id": "Q7_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q7: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_B","vt": "str"},{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1465,
"wires": [["Q13"],["Q14"],["Q7_wait"]]
},
{
"id": "Q7_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 1540,
"wires": [["Q7_check_time"]]
},
{
"id": "Q7_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1540,
"wires": [["Q7_set"],["Q7"]]
},
{
"id": "Q7_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"allow_Out\", \"deny_Out\");\n var rnd = Math.floor( Math.random() * 2);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 1540,
"wires": [["Q7_check_operation"]]
},
{
"id": "Q7_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q7: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "allow_Out","vt": "str"}, {"t": "eq","v": "deny_Out","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 1540,
"wires": [["Q7_allow_Out_set"], ["Q7_deny_Out_set"]]
},
{
"id": "Q7_allow_Out_set",
"type": "function",
"z": "flow_name",
"name": "allow_Out_set",
"func": "msg.payload = \"allow_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1540,
"wires": [["Q7_allow_Out"]]
},
{
"id": "Q7_allow_Out",
"type": "http request",
"z": "flow_name",
"name": "allow_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1540,
"wires": [["Q2"]]
},
{
"id": "Q7_deny_Out_set",
"type": "function",
"z": "flow_name",
"name": "deny_Out_set",
"func": "msg.payload = \"deny_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1580,
"wires": [["Q7_deny_Out"]]
},
{
"id": "Q7_deny_Out",
"type": "http request",
"z": "flow_name",
"name": "deny_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1580,
"wires": [["Q8"]]
},
{
"id": "Q8",
"type": "function",
"z": "flow_name",
"name": "Q8",
"func": "flow.set(\"State\", \"Q8\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 1630,
"wires": [["Q8_check"]]
},
{
"id": "Q8_check",
"type": "switch",
"z": "flow_name",
"name": "Q8_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqOut","vt": "str"},{"t": "eq","v": "reqEnter_B","vt": "str"},{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1705,
"wires": [["Q7"],["Q9"],["Q12"],["Q8_delay"]]
},
{
"id": "Q8_delay",
"type": "delay",
"z": "flow_name",
"name": "delay 100ms",
"pauseType": "delay",
"timeout": "100",
"timeoutUnits": "milliseconds",
"rate": "1",
"nbRateUnits": "1",
"rateUnits": "second",
"randomFirst": "1",
"randomLast": "5",
"randomUnits": "seconds",
"drop": false,
"x": 500,
"y": 1630,
"wires": [["Q8"]]
},
{
"id": "Q9",
"type": "function",
"z": "flow_name",
"name": "Q9",
"func": "flow.set(\"State\", \"Q9\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 1780,
"wires": [["Q9_check_request"]]
},
{
"id": "Q9_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q9: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "eq","v": "reqOut","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1855,
"wires": [["Q10"],["Q13"],["Q9_wait"]]
},
{
"id": "Q9_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 1930,
"wires": [["Q9_check_time"]]
},
{
"id": "Q9_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 1930,
"wires": [["Q9_set"],["Q9"]]
},
{
"id": "Q9_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_B\");\n var rnd = Math.floor( Math.random() * 1);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 1930,
"wires": [["Q9_check_operation"]]
},
{
"id": "Q9_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q9: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_B","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 1930,
"wires": [["Q9_deny_B_set"]]
},
{
"id": "Q9_deny_B_set",
"type": "function",
"z": "flow_name",
"name": "deny_B_set",
"func": "msg.payload = \"deny_B\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 1930,
"wires": [["Q9_deny_B"]]
},
{
"id": "Q9_deny_B",
"type": "http request",
"z": "flow_name",
"name": "deny_B",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_B/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 1930,
"wires": [["Q8"]]
},
{
"id": "Q10",
"type": "function",
"z": "flow_name",
"name": "Q10",
"func": "flow.set(\"State\", \"Q10\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 1980,
"wires": [["Q10_check_request"]]
},
{
"id": "Q10_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q10: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqOut","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2055,
"wires": [["Q11"],["Q10_wait"]]
},
{
"id": "Q10_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 2130,
"wires": [["Q10_check_time"]]
},
{
"id": "Q10_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2130,
"wires": [["Q10_set"],["Q10"]]
},
{
"id": "Q10_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\", \"deny_B\");\n var rnd = Math.floor( Math.random() * 2);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 2130,
"wires": [["Q10_check_operation"]]
},
{
"id": "Q10_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q10: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "deny_B","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 2130,
"wires": [["Q10_deny_A_set"], ["Q10_deny_B_set"]]
},
{
"id": "Q10_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2130,
"wires": [["Q10_deny_A"]]
},
{
"id": "Q10_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2130,
"wires": [["Q9"]]
},
{
"id": "Q10_deny_B_set",
"type": "function",
"z": "flow_name",
"name": "deny_B_set",
"func": "msg.payload = \"deny_B\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2170,
"wires": [["Q10_deny_B"]]
},
{
"id": "Q10_deny_B",
"type": "http request",
"z": "flow_name",
"name": "deny_B",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_B/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2170,
"wires": [["Q12"]]
},
{
"id": "Q11",
"type": "function",
"z": "flow_name",
"name": "Q11",
"func": "flow.set(\"State\", \"Q11\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 2220,
"wires": [["Q11_set"]]
},
{
"id": "Q11_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_Out\", \"deny_A\", \"deny_B\", \"allow_Out\");\n var rnd = Math.floor( Math.random() * 4);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 2220,
"wires": [["Q11_check"]]
},
{
"id": "Q11_check",
"type": "switch",
"z": "flow_name",
"name": "Q11_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_Out","vt": "str"}, {"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "deny_B","vt": "str"}, {"t": "eq","v": "allow_Out","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 2220,
"wires": [["Q11_deny_Out_set"], ["Q11_deny_A_set"], ["Q11_deny_B_set"], ["Q11_allow_Out_set"]]
},{
"id": "Q11_deny_Out_set",
"type": "function",
"z": "flow_name",
"name": "deny_Out_set",
"func": "msg.payload = \"deny_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2220,
"wires": [["Q11_deny_Out"]]
},
{
"id": "Q11_deny_Out",
"type": "http request",
"z": "flow_name",
"name": "deny_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2220,
"wires": [["Q10"]]
},{
"id": "Q11_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2260,
"wires": [["Q11_deny_A"]]
},
{
"id": "Q11_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2260,
"wires": [["Q13"]]
},{
"id": "Q11_deny_B_set",
"type": "function",
"z": "flow_name",
"name": "deny_B_set",
"func": "msg.payload = \"deny_B\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2300,
"wires": [["Q11_deny_B"]]
},
{
"id": "Q11_deny_B",
"type": "http request",
"z": "flow_name",
"name": "deny_B",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_B/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2300,
"wires": [["Q14"]]
},{
"id": "Q11_allow_Out_set",
"type": "function",
"z": "flow_name",
"name": "allow_Out_set",
"func": "msg.payload = \"allow_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2340,
"wires": [["Q11_allow_Out"]]
},
{
"id": "Q11_allow_Out",
"type": "http request",
"z": "flow_name",
"name": "allow_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2340,
"wires": [["Q16"]]
},
{
"id": "Q12",
"type": "function",
"z": "flow_name",
"name": "Q12",
"func": "flow.set(\"State\", \"Q12\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 2390,
"wires": [["Q12_check_request"]]
},
{
"id": "Q12_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q12: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_B","vt": "str"},{"t": "eq","v": "reqOut","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2465,
"wires": [["Q10"],["Q14"],["Q12_wait"]]
},
{
"id": "Q12_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 2540,
"wires": [["Q12_check_time"]]
},
{
"id": "Q12_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2540,
"wires": [["Q12_set"],["Q12"]]
},
{
"id": "Q12_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\");\n var rnd = Math.floor( Math.random() * 1);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 2540,
"wires": [["Q12_check_operation"]]
},
{
"id": "Q12_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q12: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 2540,
"wires": [["Q12_deny_A_set"]]
},
{
"id": "Q12_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2540,
"wires": [["Q12_deny_A"]]
},
{
"id": "Q12_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2540,
"wires": [["Q8"]]
},
{
"id": "Q13",
"type": "function",
"z": "flow_name",
"name": "Q13",
"func": "flow.set(\"State\", \"Q13\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 2590,
"wires": [["Q13_check_request"]]
},
{
"id": "Q13_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q13: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_A","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2665,
"wires": [["Q11"],["Q13_wait"]]
},
{
"id": "Q13_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 2740,
"wires": [["Q13_check_time"]]
},
{
"id": "Q13_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2740,
"wires": [["Q13_set"],["Q13"]]
},
{
"id": "Q13_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"allow_Out\", \"deny_B\", \"deny_Out\");\n var rnd = Math.floor( Math.random() * 3);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 2740,
"wires": [["Q13_check_operation"]]
},
{
"id": "Q13_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q13: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "allow_Out","vt": "str"}, {"t": "eq","v": "deny_B","vt": "str"}, {"t": "eq","v": "deny_Out","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 2740,
"wires": [["Q13_allow_Out_set"], ["Q13_deny_B_set"], ["Q13_deny_Out_set"]]
},
{
"id": "Q13_allow_Out_set",
"type": "function",
"z": "flow_name",
"name": "allow_Out_set",
"func": "msg.payload = \"allow_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2740,
"wires": [["Q13_allow_Out"]]
},
{
"id": "Q13_allow_Out",
"type": "http request",
"z": "flow_name",
"name": "allow_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2740,
"wires": [["Q3"]]
},
{
"id": "Q13_deny_B_set",
"type": "function",
"z": "flow_name",
"name": "deny_B_set",
"func": "msg.payload = \"deny_B\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2780,
"wires": [["Q13_deny_B"]]
},
{
"id": "Q13_deny_B",
"type": "http request",
"z": "flow_name",
"name": "deny_B",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_B/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2780,
"wires": [["Q7"]]
},
{
"id": "Q13_deny_Out_set",
"type": "function",
"z": "flow_name",
"name": "deny_Out_set",
"func": "msg.payload = \"deny_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 2820,
"wires": [["Q13_deny_Out"]]
},
{
"id": "Q13_deny_Out",
"type": "http request",
"z": "flow_name",
"name": "deny_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 2820,
"wires": [["Q9"]]
},
{
"id": "Q14",
"type": "function",
"z": "flow_name",
"name": "Q14",
"func": "flow.set(\"State\", \"Q14\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 2870,
"wires": [["Q14_check_request"]]
},
{
"id": "Q14_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q14: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_B","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 2945,
"wires": [["Q11"],["Q14_wait"]]
},
{
"id": "Q14_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 3020,
"wires": [["Q14_check_time"]]
},
{
"id": "Q14_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 3020,
"wires": [["Q14_set"],["Q14"]]
},
{
"id": "Q14_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\", \"deny_Out\", \"allow_Out\");\n var rnd = Math.floor( Math.random() * 3);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 3020,
"wires": [["Q14_check_operation"]]
},
{
"id": "Q14_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q14: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "deny_Out","vt": "str"}, {"t": "eq","v": "allow_Out","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 3020,
"wires": [["Q14_deny_A_set"], ["Q14_deny_Out_set"], ["Q14_allow_Out_set"]]
},
{
"id": "Q14_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3020,
"wires": [["Q14_deny_A"]]
},
{
"id": "Q14_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3020,
"wires": [["Q7"]]
},
{
"id": "Q14_deny_Out_set",
"type": "function",
"z": "flow_name",
"name": "deny_Out_set",
"func": "msg.payload = \"deny_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3060,
"wires": [["Q14_deny_Out"]]
},
{
"id": "Q14_deny_Out",
"type": "http request",
"z": "flow_name",
"name": "deny_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3060,
"wires": [["Q12"]]
},
{
"id": "Q14_allow_Out_set",
"type": "function",
"z": "flow_name",
"name": "allow_Out_set",
"func": "msg.payload = \"allow_Out\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3100,
"wires": [["Q14_allow_Out"]]
},
{
"id": "Q14_allow_Out",
"type": "http request",
"z": "flow_name",
"name": "allow_Out",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_Out/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3100,
"wires": [["Q17"]]
},
{
"id": "Q15",
"type": "function",
"z": "flow_name",
"name": "Q15",
"func": "flow.set(\"State\", \"Q15\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 3150,
"wires": [["Q15_check_request"]]
},
{
"id": "Q15_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q15: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqOut","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 3225,
"wires": [["Q6"],["Q15_wait"]]
},
{
"id": "Q15_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 3300,
"wires": [["Q15_check_time"]]
},
{
"id": "Q15_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 3300,
"wires": [["Q15_set"],["Q15"]]
},
{
"id": "Q15_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\", \"allow_A[1]\");\n var rnd = Math.floor( Math.random() * 2);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 3300,
"wires": [["Q15_check_operation"]]
},
{
"id": "Q15_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q15: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "allow_A[1]","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 3300,
"wires": [["Q15_deny_A_set"], ["Q15_allow_A[1]_set"]]
},
{
"id": "Q15_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3300,
"wires": [["Q15_deny_A"]]
},
{
"id": "Q15_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3300,
"wires": [["Q4"]]
},
{
"id": "Q15_allow_A[1]_set",
"type": "function",
"z": "flow_name",
"name": "allow_A[1]_set",
"func": "msg.payload = \"allow_A[1]\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3340,
"wires": [["Q15_allow_A[1]"]]
},
{
"id": "Q15_allow_A[1]",
"type": "http request",
"z": "flow_name",
"name": "allow_A[1]",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_A[1]/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3340,
"wires": [["Q8"]]
},
{
"id": "Q16",
"type": "function",
"z": "flow_name",
"name": "Q16",
"func": "flow.set(\"State\", \"Q16\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 3390,
"wires": [["Q16_set"]]
},
{
"id": "Q16_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\", \"allow_B[1]\", \"deny_B\");\n var rnd = Math.floor( Math.random() * 3);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 3390,
"wires": [["Q16_check"]]
},
{
"id": "Q16_check",
"type": "switch",
"z": "flow_name",
"name": "Q16_check",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}, {"t": "eq","v": "allow_B[1]","vt": "str"}, {"t": "eq","v": "deny_B","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 3390,
"wires": [["Q16_deny_A_set"], ["Q16_allow_B[1]_set"], ["Q16_deny_B_set"]]
},{
"id": "Q16_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3390,
"wires": [["Q16_deny_A"]]
},
{
"id": "Q16_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3390,
"wires": [["Q3"]]
},{
"id": "Q16_allow_B[1]_set",
"type": "function",
"z": "flow_name",
"name": "allow_B[1]_set",
"func": "msg.payload = \"allow_B[1]\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3430,
"wires": [["Q16_allow_B[1]"]]
},
{
"id": "Q16_allow_B[1]",
"type": "http request",
"z": "flow_name",
"name": "allow_B[1]",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/allow_B[1]/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3430,
"wires": [["Q15"]]
},{
"id": "Q16_deny_B_set",
"type": "function",
"z": "flow_name",
"name": "deny_B_set",
"func": "msg.payload = \"deny_B\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3470,
"wires": [["Q16_deny_B"]]
},
{
"id": "Q16_deny_B",
"type": "http request",
"z": "flow_name",
"name": "deny_B",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_B/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3470,
"wires": [["Q17"]]
},
{
"id": "Q17",
"type": "function",
"z": "flow_name",
"name": "Q17",
"func": "flow.set(\"State\", \"Q17\");\n msg.payload = flow.get(\"State\");\n return msg;",
"noerr": 0,
"x": 700,
"y": 3520,
"wires": [["Q17_check_request"]]
},
{
"id": "Q17_check_request",
"type": "switch",
"z": "flow_name",
"name": "Q17: check request",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "reqEnter_B","vt": "str"},{"t": "else"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 3595,
"wires": [["Q16"],["Q17_wait"]]
},
{
"id": "Q17_wait",
"type": "function",
"z": "flow_name",
"name": "wait request (10s)",
"func": "var d = new Date();\n var ms = d.getTime();\n var time = flow.get(\"Time\");\n if(ms-time>10000)//10秒\n {\n    flow.set(\"boolean\", true);\n }\n else\n {\n    flow.set(\"boolean\", false);\n }\n return msg;",
"noerr": 0,
"x": 700,
"y": 3670,
"wires": [["Q17_check_time"]]
},
{
"id": "Q17_check_time",
"type": "switch",
"z": "flow_name",
"name": "check passing time",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "true"},{"t":"false"}],
"checkall": "true",
"repair": false,
"x": 700,
"y": 3670,
"wires": [["Q17_set"],["Q17"]]
},
{
"id": "Q17_set",
"type": "function",
"z": "flow_name",
"name": "Modifiable Area",
"func": "var action = new Array(\"deny_A\");\n var rnd = Math.floor( Math.random() * 1);\n flow.set(\"action\", action[rnd]);\n return msg;",
"noerr": 0,
"x": 900,
"y": 3670,
"wires": [["Q17_check_operation"]]
},
{
"id": "Q17_check_operation",
"type": "switch",
"z": "flow_name",
"name": "Q17: check operation",
"property": "action",
"propertyType": "flow",
"rules": [{"t": "eq","v": "deny_A","vt": "str"}],
"checkall": "true",
"repair": false,
"x": 1100,
"y": 3670,
"wires": [["Q17_deny_A_set"]]
},
{
"id": "Q17_deny_A_set",
"type": "function",
"z": "flow_name",
"name": "deny_A_set",
"func": "msg.payload = \"deny_A\";\nflow.set(\"action\", msg.payload);\nreturn msg;",
"noerr": 0,
"x": 1400,
"y": 3670,
"wires": [["Q17_deny_A"]]
},
{
"id": "Q17_deny_A",
"type": "http request",
"z": "flow_name",
"name": "deny_A",
"method": "POST",
"ret": "txt",
"paytoqs": false,
"url": "https://maker.ifttt.com/trigger/deny_A/with/key/cPFBtMhxOsUhT968fhqXb9",
"persist": false,
"x": 1700,
"y": 3670,
"wires": [["Q2"]]
}
]
